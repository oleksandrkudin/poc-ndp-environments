name: meta_deploy

on: 
  push:
    branches: [main]
    paths:
      - environments/**
  workflow_dispatch:

jobs:
  # Create 3 matrices for each environment
  # units = [], how to add each value with metadata? version, changed 
  units:
    runs-on: ubuntu-latest
    outputs:
      dev_units: ${{ steps.output.outputs.dev_units }}
      test_units: ${{ steps.output.outputs.test_units }}
      prod_units: ${{ steps.output.outputs.prod_units }}
      dev_units_config: ${{ steps.output.outputs.dev_units_config }}
      test_units_config: ${{ steps.output.outputs.test_units_config }}
      prod_units_config: ${{ steps.output.outputs.prod_units_config }}
    steps:
      - uses: actions/checkout@v4.1.1

      - uses: dcarbone/install-jq-action
        with:
          version: '1.7'
          force: true

      # TODO: What is environment variable length limit?
      - name: Get environments configuration
        working-directory: environments
        run: |
          echo 'Create configuration using the schema: {"<env>": {"<unit>": {"version": ""}}}'
          echo '{}' | tee meta-config.json
          for config_file in $(find ./ -name config.json); do
            version=$(jq --raw-output '.version' $config_file)
            next_environment=$(jq --raw-output '.next_environment' $config_file)
            unit=$(basename $(dirname $config_file))
            environment=$(basename $(dirname $(dirname $config_file)))
            jq --arg environment "$environment" --arg unit "$unit" --arg version "$version" --arg next_environment "$next_environment" '. |= . * {$environment: {$unit: {"version": $version, "next_environment": $next_environment}}}' meta-config.json | tee -a tmp.json && mv tmp.json meta-config.json
          done
      
      - name: Set output
        id: output
        working-directory: environments
        run: |
          dev_units=$(jq --compact-output '.dev | keys' meta-config.json)
          test_units=$(jq --compact-output '.test | keys' meta-config.json)
          prod_units=$(jq --compact-output '.prod | keys' meta-config.json)
          dev_units_config=$(jq --compact-output '.dev' meta-config.json)
          test_units_config=$(jq --compact-output '.test' meta-config.json)
          prod_units_config=$(jq --compact-output '.prod' meta-config.json)
          echo "dev_units=$dev_units" | tee -a "$GITHUB_OUTPUT"
          echo "test_units=$test_units" | tee -a "$GITHUB_OUTPUT"
          echo "prod_units=$prod_units" | tee -a "$GITHUB_OUTPUT"
          echo "dev_units_config=$dev_units_config" | tee -a "$GITHUB_OUTPUT"
          echo "test_units_config=$test_units_config" | tee -a "$GITHUB_OUTPUT"
          echo "prod_units_config=$prod_units_config" | tee -a "$GITHUB_OUTPUT"
  
  deploy_dev:
    needs: [units]
    strategy:
      matrix:
        unit: ${{ fromJson(needs.units.outputs.dev_units) }}
    #name: ${{ matrix.unit }} ${{ fromJson(needs.units.outputs.dev_units_config)[matrix.unit]['version'] }} on dev
    uses: oleksandrkudin/poc-ndp-environments/.github/workflows/deploy.yaml@main
    with:
      unit: ${{ matrix.unit }}
      environment: dev
      release_version: ${{ fromJson(needs.units.outputs.dev_units_config)[matrix.unit]['version'] }}  
      next_environment: test
  
  deploy_test:
    needs: [units, deploy_dev]
    strategy:
      matrix:
        unit: ${{ fromJson(needs.units.outputs.test_units) }}    
    uses: oleksandrkudin/poc-ndp-environments/.github/workflows/deploy.yaml@main
    with:
      unit: ${{ matrix.unit }}
      environment: test
      release_version: ${{ fromJson(needs.units.outputs.test_units_config)[matrix.unit]['version'] }}  
      next_environment: prod

  deploy_prod:
    needs: [units, deploy_test]
    strategy:
      matrix:
        unit: ${{ fromJson(needs.units.outputs.prod_units) }}    
    uses: oleksandrkudin/poc-ndp-environments/.github/workflows/deploy.yaml@main
    with:
      unit: ${{ matrix.unit }}
      environment: prod
      release_version: ${{ fromJson(needs.units.outputs.prod_units_config)[matrix.unit]['version'] }}  
      next_environment: ""
