name: deploy

on:
  workflow_call:
    inputs:
      units_conf:
        type: string
        required: true
    outputs:
      units_result:
        value: ${{ jobs.result.outputs.units_result }}

jobs:
  #####################
  # Units
  #####################

  # Deployment unit
  poc-ndp-helm-chart1:
    if: ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'] != '' }}
    #name: "${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].environment }} : poc-ndp-helm-chart1 : ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].deployed_release_version }} ->  ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].version }}"
    secrets: inherit
    concurrency:
      group: ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].environment }}
    uses: oleksandrkudin/poc-ndp-helm-chart1/.github/workflows/deploy.yaml@main
    with:
      environment: ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].environment }}
      release_version:  ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].version }}
      # next_environment: ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].next_environment }}
      app_version: ${{ fromJson(inputs.units_conf)['poc-ndp-helm-chart1'].appVersion }}

  # Tracking unit
  poc-ndp-app1:
    needs: [poc-ndp-helm-chart1]
    if: ${{ fromJson(inputs.units_conf)['poc-ndp-app1'] != '' }}
    #name: "${{ fromJson(inputs.units_conf)['poc-ndp-app1'].environment }} : poc-ndp-app1 : ${{ fromJson(inputs.units_conf)['poc-ndp-app1'].deployed_release_version }} ->  ${{ fromJson(inputs.units_conf)['poc-ndp-app1'].version }}"
    secrets: inherit
    concurrency:
      group: ${{ fromJson(inputs.units_conf)['poc-ndp-app1'].environment }}
    uses: oleksandrkudin/poc-ndp-workflows/.github/workflows/null_deploy.yaml@main
    with:
      unit: "poc-ndp-app1"
      environment: ${{ fromJson(inputs.units_conf)['poc-ndp-app1'].environment }}
      release_version:  ${{ fromJson(inputs.units_conf)['poc-ndp-app1'].version }}
      #next_environment: ${{ fromJson(inputs.units_conf)['poc-ndp-app1'].next_environment }}
      deployment_statuses: '["${{ needs.poc-ndp-helm-chart1.result }}"]'

  # Test unit
  poc-ndp-test1:
    if: ${{ fromJson(inputs.units_conf)['poc-ndp-test1'] != '' }}
    #name: "${{ fromJson(inputs.units_conf)['poc-ndp-test1'].environment }} : poc-ndp-test1 : ${{ fromJson(inputs.units_conf)['poc-ndp-test1'].deployed_release_version }} ->  ${{ fromJson(inputs.units_conf)['poc-ndp-test1'].version }}"
    secrets: inherit
    concurrency:
      group: ${{ fromJson(inputs.units_conf)['poc-ndp-test1'].environment }}
    uses: oleksandrkudin/poc-ndp-test1/.github/workflows/deploy.yaml@main
    with:
      environment: ${{ fromJson(inputs.units_conf)['poc-ndp-test1'].environment }}
      release_version:  ${{ fromJson(inputs.units_conf)['poc-ndp-test1'].version }}
      #next_environment: ${{ fromJson(inputs.units_conf)['poc-ndp-test1'].next_environment }}

  #####################
  # Result
  #####################
  result:
    needs: [poc-ndp-helm-chart1, poc-ndp-app1, poc-ndp-test1]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    outputs:
      units_result: >
          {
            "poc-ndp-helm-chart1": "${{ needs.poc-ndp-helm-chart1.result }}",
            "poc-ndp-app1": "${{ needs.poc-ndp-app1.result }}",
            "poc-ndp-test1": "${{ needs.poc-ndp-test1.result }}"
          }
    #  units_result: ${{ steps.output.outputs.units_result }}
    steps:
      - run: |
          echo "Just providing result from jobs!"

